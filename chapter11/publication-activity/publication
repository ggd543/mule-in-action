#! /bin/sh

# There is no need to call this if you set the MULE_HOME in your environment
# but you must also define MULE_LIB for the example (see below)
# or specify the config as a file: URI (see README.txt)
if [ -z "$MULE_HOME" ] ; then
  # find the name of the real MULE_HOME which is two levels up
  MULE_HOME=`pwd`
  MULE_HOME=`dirname "$MULE_HOME"`
  MULE_HOME=`dirname "$MULE_HOME"`
  export MULE_HOME
fi

# If MULE_BASE is not set, make it MULE_HOME
if [ -z "$MULE_BASE" ] ; then
  MULE_BASE="$MULE_HOME"
  export MULE_BASE
fi

# This extends the classpath to include the configuration directory
# Any changes to the files in ./conf will take precedence over those deployed to $MULE_HOME/lib/user
MULE_LIB=./conf:./target/lib/activemq-core.jar:./target/lib/activity-audit.jar:./target/lib/html-dashboard.jar
export MULE_LIB

# It is possible to name the particular instance of Mule that is started
# This is extremely useful when you have several instances running on the same server
MULE_APP="publication"
export MULE_APP

exec "$MULE_BASE/bin/mule" -config publication-config.xml,server-stub-config.xml -M-Dmule.serverId=Publication

