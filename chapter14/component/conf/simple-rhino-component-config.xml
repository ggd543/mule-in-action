<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:scripting="http://www.mulesource.org/schema/mule/scripting/2.2"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.mulesource.org/schema/mule/scripting/2.2 http://www.mulesource.org/schema/mule/scripting/2.2/mule-scripting.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
       "
        >

    <vm:connector name="vmConnector" queueEvents="true"/>

    <model name="rhinoMessageEnrichmentModel">
        <service name="rhinoMessageEnrichmentService">
            <inbound>
               <vm:inbound-endpoint path="in"/>
            </inbound>
            <scripting:component>
                <scripting:script engine="js">
                    if (payload.search("STATUS: CRITICAL") != -1) {
                        message.setProperty("PRIORITY", 'HIGH');
                    }
                    result = message
                </scripting:script>
            </scripting:component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="out"/>
                </pass-through-router>
            </outbound>
        </service>

    </model>

</mule>
